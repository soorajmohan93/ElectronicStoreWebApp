@model ElectronicStoreMVC.Models.ProductViewModel

@{ ViewData["Title"] = "Maintain Products"; }

<h1>Product Listing</h1>

<form>
    <p>
        Search for Products: <input class="search-text" type="text" asp-for="ProductName" />
    </p>
    <p>
        <input class="filter-clickable"  type="submit" value="Filter" />
    </p>
</form>


<p>
    <a class="create-new-clickable" asp-action="Create">Create New Product</a>
    
</p>


<p>
    @if (ViewData["ProductName"] != null)
    {
        <div class="search-result">Search Result for @ViewData["ProductName"]</div>
    }
</p>



<table class="table">
    <thead>
        <tr>
            <th>
                Product
            </th>
            <th>
                Description
            </th>
            <th>
                Price
            </th>
            <th>
                Stock Quantity
            </th>
            <th>
                Product Category
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.ProductName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ProductDesc)
    </td>
    <td>
        CAD @item.ProductPrice.ToString("F")
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ProductStock)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ProductCategory.CategoryName)
    </td>
    <td>
        <a class="edit-clickable" asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
        <a class="details-clickable" asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
        <a class="delete-clickable" asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
    </td>
</tr>
}
    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
